/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
// -----------------------------------------------------------------------------------------
// V1

//        keymap {
 //               compatible = "zmk,keymap";
  //                      
   //             default_layer {
    //                    bindings = <
//&kp ESC   &kp Q &kp W &kp E &kp R &kp T         &kp Y &kp U &kp I     &kp O   &kp P    &kp BSPC
//&kp LCTRL &kp A &kp S &kp D &kp F &kp G         &kp H &kp J &kp K     &kp L   &kp SEMI &kp SQT
//&kp LSHFT &kp Z &kp X &kp C &kp V &kp B         &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp RSHFT 
//&kp LALT &mo 1 &kp RET                          &kp SPACE &mo 2 &kp RMETA
                        //>;
                //};
      
                //lower_layer {
                        //bindings = <
//&trans &trans &trans &trans &trans &trans       &kp KP_MULTIPLY &kp N7 &kp N8 &kp N9 &kp PLUS  &kp BSPC
//&trans &trans &trans &trans &trans &trans       &kp FSLH        &kp N4 &kp N5 &kp N6 &kp MINUS &kp CARET
//&trans &trans &trans &trans &trans &trans       &kp PRCNT       &kp N1 &kp N2 &kp N3 &kp EQUAL &trans
//&trans &trans &trans                            &kp TAB         &kp N0 &kp RMETA
                        //>;
                //};
//
                //raise_layer {
                        //bindings = <
//&trans &kp DLLR  &kp AT   &kp HASH &kp EXCL  &kp AMPS         &trans     &trans       &trans       &trans       &trans       &trans 
//&trans &kp BSLH  &kp LBRC &kp LBKT &kp LPAR  &kp PIPE         &kp LEFT   &kp DOWN     &kp UP       &kp RIGHT    &trans       &trans 
//&trans &trans    &kp RBRC &kp RBKT &kp RPAR  &kp GRAVE        &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
//&trans &kp TILDE &kp UNDER                                    &trans     &trans       &kp RMETA
                        //>;
                //};

// -----------------------------------------------------------------------------------------
// V2

keymap {
  compatible = "zmk,keymap";

  //macros {
    //copy: copy {
      //compatible = "zmk,behavior-macro";
      //#binding-cells = <0>;
      //bindings
        //= <&macro_press &kp LCTRL>
        //, <&macro_tap &kp c>
        //, <&macro_release &kp LCTRL>
        //;
    //};
  //};

  // 0
  base_layer_qwerty {
    bindings = <
&lt 3 ESC   &kp Q   &kp W     &kp E       &kp R         &kp T         &kp Y       &kp U         &kp I       &kp O     &kp P     &kp BSPC
&kp LCTRL   &kp A   &kp S     &mt LCTRL D &mt LSHIFT F  &kp G         &kp H       &mt RSHIFT J  &mt RCTRL K &kp L     &kp SEMI  &kp SQT
&kp LSHFT   &kp Z   &kp X     &kp C       &kp V         &kp B         &kp N       &kp M         &kp COMMA   &kp DOT   &kp FSLH  &kp RSHFT 
                              &kp LALT    &lt 1 TAB     &kp RET       &kp SPACE   &lt 2 BSPC    &lt 3 ESC
    >;
  };

  // 1
  number_layer {
    bindings = <
&lt 3 ESC   &trans  &trans  &trans    &trans    &trans      &kp KP_MULTIPLY &kp N7  &kp N8  &kp N9  &kp PLUS  &kp BSPC
&kp LCTRL   &trans  &trans  &trans    &trans    &trans      &kp FSLH        &kp N4  &kp N5  &kp N6  &kp MINUS &kp CARET
&kp LSHIFT  &trans  &trans  &trans    &trans    &trans      &kp PRCNT       &kp N1  &kp N2  &kp N3  &kp EQUAL &kp RSHFT 
                            &kp LALT  &lt 1 TAB &kp RET     &kp TAB         &kp N0  &lt 3 ESC
    >;
  };

  // 2
  symbol_layer {
    bindings = <
&lt 3 ESC   &kp DLLR  &kp AT    &kp HASH  &kp EXCL  &kp AMPS        &trans     &trans       &trans       &trans       &trans       &trans 
&kp LCTRL   &kp BSLH  &kp LBRC  &kp LBKT  &kp LPAR  &kp PIPE        &kp LEFT   &kp DOWN     &kp UP       &kp RIGHT    &trans       &trans 
&kp LSHIFT  &trans    &kp RBRC  &kp RBKT  &kp RPAR  &kp GRAVE       &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                                &kp LALT   &kp TILDE &kp UNDER       &kp SPACE  &trans       &lt 3 ESC
    >;
  };

  // 3
  // next/prev work (mac) = ALT(LEFT/RIGHT)
  // beginning/end line (mac) = CTRL(LEFT/RIGHT)
  vim_layer {
    bindings = <
&lt 3 ESC   &trans  &trans  &trans    &trans    &trans      &trans  &sl 6     &trans    &trans  &trans    &kp BSPC
&kp LCTRL   &trans  &trans  &trans    &trans    &sl 5       &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT &trans
&kp LSHIFT  &trans  &trans  &trans    &trans    &sl 4       &trans  &trans    &trans    &kp N3  &trans    &kp RSHFT 
                            &kp LALT  &lt 1 TAB &kp RET     &kp TAB &kp N0    &lt 3 ESC
    >;
  };

  // 4
  change_layer {
    bindings =  <
&lt 3 ESC   &trans  &trans  &trans    &trans    &trans      &trans  &sl 6     &trans    &trans  &trans    &kp BSPC
&kp LCTRL   &trans  &trans  &trans    &trans    &sl 5       &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT &trans
&kp LSHIFT  &trans  &trans  &trans    &trans    &sl 4       &trans  &trans    &trans    &kp N3  &trans    &kp RSHFT 
                            &kp LALT  &lt 1 TAB &kp RET     &kp TAB &kp N0    &lt 3 ESC
    >;

  };

  // 5
  delete_layer {
    bindings =  <
&lt 3 ESC   &trans  &trans  &trans    &trans    &trans      &trans  &sl 6     &trans    &trans  &trans    &kp BSPC
&kp LCTRL   &trans  &trans  &trans    &trans    &sl 5       &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT &trans
&kp LSHIFT  &trans  &trans  &trans    &trans    &sl 4       &trans  &trans    &trans    &kp N3  &trans    &kp RSHFT 
                            &kp LALT  &lt 1 TAB &kp RET     &kp TAB &kp N0    &lt 3 ESC
    >;
  };

  // 6
  yank_layer {
    bindings =  <
&lt 3 ESC   &trans  &trans  &trans    &trans    &trans      &trans  &sl 6     &trans    &trans  &trans    &kp BSPC
&kp LCTRL   &trans  &trans  &trans    &trans    &sl 5       &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT &trans
&kp LSHIFT  &trans  &trans  &trans    &trans    &sl 4       &trans  &trans    &trans    &kp N3  &trans    &kp RSHFT 
                            &kp LALT  &lt 1 TAB &kp RET     &kp TAB &kp N0    &lt 3 ESC
    >;
  };

};
};
